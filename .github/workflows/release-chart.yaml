name: release-chart
on:
  workflow_call:
    inputs:
      isNative:
        type: boolean
        required: true
      version:
        type: string
        required: true
      tag:
        type: string
        required: true
      skip_artifacts_download:
        type: boolean
        required: false
        default: false
      dockerFile_path:
        type: string
        required: false
      registry:
        type: string
        default: 'ghcr.io'
        required: false
      registry_username:
        type: string
        default: 'property-xyz-bot'
        required: false
    secrets:
      GH_ORG_TOKEN:
        required: true
jobs:
  release:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        if:  inputs.skip_artifacts_download == false
        uses: actions/download-artifact@v3
        with:
          name: built-application
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry_username }}
          password: ${{ secrets.XYZ_BOT_TOKEN }}

      - name: Set Docker file path
        run: |
          if [[ ${{ inputs.isNative }} = true ]]; then
           echo "DOCKERFILE_PATH=src/main/docker/Dockerfile.native-micro" >> $GITHUB_ENV
          elif [[ ! -z ${{ inputs.dockerFile_path }} ]]; then
           echo "DOCKERFILE_PATH=${{ inputs.dockerFile_path }}" >> $GITHUB_ENV
          else
           echo "DOCKERFILE_PATH=src/main/docker/Dockerfile.jvm" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ inputs.registry }}/${{ github.repository }}:${{ inputs.tag }}

      - name: Update image tag in helm values
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag = "${{ inputs.tag }}"' charts/${{ github.event.repository.name }}/values.yaml

      - name: Update repository  in helm values
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.repository = "${{ inputs.registry }}/${{ github.repository }}"' charts/${{ github.event.repository.name }}/values.yaml

      - name: Update version in helm chart
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = "${{ inputs.version }}"' charts/${{ github.event.repository.name }}/Chart.yaml

      - name: Release helm chart
        uses: stefanprodan/helm-gh-pages@v1.7.0
        with:
          repository: platform-helm-charts
          token: ${{ secrets.GH_ORG_TOKEN }}
          charts_url: https://property-xyz.github.io/platform-helm-charts/
